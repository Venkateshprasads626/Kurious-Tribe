{"ast":null,"code":"var _jsxFileName = \"/home/prashanth/WOLFLOW/wolflow-project/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Home from './Screens/Home';\nimport Gallery from './Screens/Gallery';\nimport Contact from './Screens/Contact';\nimport About from './Screens/About';\nimport Whatwedo from './Screens/Whatwedo';\nimport { CubeGrid } from 'styled-loaders-react';\nimport GifList from '../gif-list/gifList';\nimport Header from './components/Header';\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this.loaderTimeOut().then(() => {\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    this.loaderTimeOut = () => {\n      return new Promise(resolve => {\n        setTimeout(() => resolve(), 2500);\n      });\n    };\n\n    this.state = { ...this.state,\n      loading: true\n    };\n  }\n\n  render() {\n    const {\n      loading\n    } = this.state;\n\n    if (loading) {\n      return null;\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(GifList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/prashanth/WOLFLOW/wolflow-project/src/App.js"],"names":["React","Component","BrowserRouter","Switch","Route","Home","Gallery","Contact","About","Whatwedo","CubeGrid","GifList","Header","App","constructor","props","componentDidMount","loaderTimeOut","then","setState","loading","Promise","resolve","setTimeout","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,OAAO,sCAAP;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AAEA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,eAAe,MAAMC,GAAN,SAAkBZ,SAAlB,CAA4B;AACzCa,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,iBARmB,GAQC,YAAY;AAC9B,WAAKC,aAAL,GAAqBC,IAArB,CAA0B,MAAM;AAC9B,aAAKC,QAAL,CAAc;AACZC,UAAAA,OAAO,EAAE;AADG,SAAd;AAGD,OAJD;AAKD,KAdkB;;AAAA,SA6BnBH,aA7BmB,GA6BH,MAAM;AACpB,aAAO,IAAII,OAAJ,CAAaC,OAAD,IAAa;AAC9BC,QAAAA,UAAU,CAAC,MAAMD,OAAO,EAAd,EAAkB,IAAlB,CAAV;AACD,OAFM,CAAP;AAGD,KAjCkB;;AAEjB,SAAKE,KAAL,GAAa,EACX,GAAG,KAAKA,KADG;AAEXJ,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID;;AAUDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEL,MAAAA;AAAF,QAAc,KAAKI,KAAzB;;AACA,QAAIJ,OAAJ,EAAa;AACX,aAAO,IAAP;AACD;;AACD,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AA5BwC","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Home from './Screens/Home'\nimport Gallery from './Screens/Gallery'\nimport Contact from './Screens/Contact'\nimport About from './Screens/About'\nimport Whatwedo from './Screens/Whatwedo'\nimport { CubeGrid } from 'styled-loaders-react'\n\nimport GifList from '../gif-list/gifList'\nimport Header from './components/Header'\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      ...this.state,\n      loading: true\n    }\n  }\n\n  componentDidMount = async () => {\n    this.loaderTimeOut().then(() => {\n      this.setState({\n        loading: false\n      })\n    })\n  }\n\n  render() {\n    const { loading } = this.state\n    if (loading) {\n      return null\n    }\n    return (\n      <div className=\"App\">\n        <Header />\n        <GifList />\n      </div>\n    )\n  }\n\n  loaderTimeOut = () => {\n    return new Promise((resolve) => {\n      setTimeout(() => resolve(), 2500)\n    })\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}